@use "./../mixins" as *;

/*--------------------*/
/*  Inputs            */
/*--------------------*/
.input-field {
  --int-height: 3.75rem;
  --int-pd: 1rem;
  --font-size: 1rem;
  display: block;
  position: relative;
  text-align: left;
  line-height: 0;
  font-size: var(--font-size);
}

.input {
  position: relative;
  z-index: 1;
  font-weight: 400;
  font-size: var(--font-size);
  line-height: var(--int-height);
  height: var(--int-height);
  padding: var(--int-pd);
  text-overflow: ellipsis;
  color: var(--clr-black);
  border-radius: var(--rd-1);
  border: rem(1) solid var(--clr-input);
  transition: var(--transition-1);
}

textarea.input {
  height: 8.75rem;
  line-height: 1.38em;
}

.input-placeholder {
  display: inline-block;
  pointer-events: none;
  position: absolute;
  text-align: left;
  z-index: 2;
  top: 0;
  left: calc(var(--int-pd) - .25em);
  transform: translateY(calc((var(--int-height) - 1.25em) / 2));
  font-size: var(--font-size);
  line-height: 1.25em;
  font-weight: 400;
  color: var(--clr-text);
  padding-inline: .25em;
  max-width: calc(100% - var(--int-pd) * 2);
  display: -webkit-box;
  -webkit-line-clamp: 1;
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  background-color: var(--clr-white);
  transition: var(--transition-1);
}

textarea.input+.input-placeholder {
  transform: translateY(var(--int-pd));
}

.password-control {
  --size: 2rem;
  cursor: pointer;
  display: block;
  position: absolute;
  z-index: 3;
  top: 0.875rem;
  right: var(--int-pd);
  width: var(--size);
  height: var(--size);
  background-image: url(../img/icons/icon-eye-off.svg);
  background-repeat: no-repeat;
  background-position: center;
  background-size: contain;
}

.password-control.view {
  background-image: url(../img/icons/icon-eye.svg);
}

.input-error {
  font-size: .75rem;
  line-height: 1.5em;
  font-weight: 400;
  color: var(--clr-red);
  margin-top: 0.25rem;
  display: none;
}

.input-success {
  font-size: .75rem;
  line-height: 1.5em;
  font-weight: 400;
  color: var(--clr-green);
  margin-top: 0.25rem;
  display: none;
}

.phone-input {
  display: flex;
  align-items: center;
  border-radius: var(--rd-1);
  border: rem(1) solid var(--clr-input);

  >* {
    border: none;
  }

  .SumoSelect {
    width: auto;
    flex-shrink: 0;
    border-right: rem(1) solid var(--clr-input);

    >.CaptionCont {
      border: none;
      padding-right: calc(var(--sel-p) * 3.5);
    }
  }
}

.date-separate-input {
  display: flex;
  gap: 0.5rem;

  >* {
    flex-grow: 1;
    flex-basis: 33.3%;
  }

  &.invalid {
    +.input-error {
      display: block;
    }
  }
}

.input-field {
  &.focus {
    z-index: 5;
  }

  &.focus .input-placeholder,
  &.value .input-placeholder {
    font-size: calc(var(--font-size) * 0.8755);
    transform: translateY(calc(-1 * (1.25em / 2)));
  }

  &:where(.focus) .input {
    border-color: var(--clr-black);
  }

  &.invalid:not(.value) .input,
  &.invalid-email .input {
    border-color: var(--clr-red);
  }

  &.invalid:not(.value) .input-error,
  &.invalid-email .input-error {
    display: block;
  }
}

@include maxMedia(xl) {
  .input-field {
    --int-height: 3.25rem;
  }
}

@include maxMedia(lg) {
  .input-field {
    --int-height: 2.875rem;
    --int-pd: .75rem;
    --font-size: .875rem;
  }
}

/*--------------------*/
/*  Autofill          */
/*--------------------*/
.input-field.focus .input:not(textarea):-webkit-autofill,
.input-field.value .input:not(textarea):-webkit-autofill,
.input-field.focus .input:not(textarea):-webkit-autofill:hover,
.input-field.value .input:not(textarea):-webkit-autofill:hover,
.input-field.focus .input:not(textarea):-webkit-autofill:focus,
.input-field.value .input:not(textarea):-webkit-autofill:focus,
input:-webkit-autofill,
input:-webkit-autofill:hover,
input:-webkit-autofill:focus {
  border: 0;
  -webkit-text-fill-color: var(--clr-black);
  -webkit-box-shadow: inset 0 0 0 rem(1) var(--clr-black), inset 0 0 rem(100) var(--clr-white);
  transition: background-color 5000s ease-in-out 0s;
}