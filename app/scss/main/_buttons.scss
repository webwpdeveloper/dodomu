@use "./../mixins" as *;

/*====================*/
/*  Buttons           */
/*====================*/
.btn {
    --btn-h: 3.5rem;
    position: relative;
    cursor: pointer;
    overflow: hidden;
    z-index: 1;
    user-select: none;
    transition: 0.3s linear;

    height: var(--btn-h);
    border-radius: 0.375rem;

    gap: 0.625rem;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;

    font-size: 1rem;
    line-height: normal;
    font-weight: 500;
    letter-spacing: -0.02em;
    text-decoration: none;
    padding: 0.75rem 1.5em;

    b[data-txt] {
        position: relative;
        overflow: hidden;
        display: inline-block;
        font-size: inherit;
        line-height: inherit;
        color: transparent;

        &::before,
        &::after {
            content: attr(data-txt);
            position: absolute;
            z-index: 1;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            transition: 0.3s linear;
        }

        &::after {
            transform: translateY(100%);
        }
    }

    &-icon {
        position: relative;
        display: inline-block;
        width: 1.75em;
        height: 1.75em;
        flex-shrink: 0;
        border-radius: 100%;
        transition: 0.3s linear;

        svg {
            --size: 0.625em;
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            display: inline-block;
            width: var(--size);
            height: var(--size);
            flex-shrink: 0;
            transition: transform 0.3s linear;
        }
    }

    &-primary {
        background-color: var(--clr-primary);
        color: var(--clr-black);

        b[data-txt] {

            &::before,
            &::after {
                color: var(--clr-black);
            }
        }

        .btn-icon {
            background-color: var(--clr-black);
            color: var(--clr-primary);
        }
    }
}

.btn-block {
    width: 100%;
}

.btn.disabled {
    pointer-events: none;
    background-color: var(--clr-grey);
}

.btn-close {
    --size: 2rem;
    position: relative;
    cursor: pointer;
    transition: var(--transition-1);

    display: inline-block;
    width: var(--size);
    height: var(--size);
    flex-shrink: 0;

    border-radius: 100%;
    background-color: var(--clr-black);
    color: var(--clr-white);

    &::before,
    &::after {
        content: "";
        position: absolute;
        z-index: 1;
        top: 50%;
        left: 50%;
        width: 52%;
        height: 0.125rem;
        transform: translate(-50%, -50%) rotate(45deg);
        background-color: currentColor;
    }

    &::after {
        transform: translate(-50%, -50%) rotate(-45deg);
    }
}

@include minMedia(xl) {
    .btn:hover {
        b[data-txt] {
            &::before {
                transform: translateY(-120%);
            }

            &::after {
                transform: translateY(0%);
            }
        }

        svg {
            transform: translate(-50%, -50%) rotate(45deg);
        }
    }

    .btn-primary:hover {
        background-color: var(--clr-black);
        color: var(--clr-primary);

        b[data-txt] {

            &::before,
            &::after {
                color: var(--clr-primary);
            }
        }

        .btn-icon {
            background-color: var(--clr-primary);
            color: var(--clr-black);
        }
    }

    .sec-black .btn-primary:hover {
        border: 0.0625rem solid var(--clr-primary);
    }

    .btn-close:hover {
        transform: rotate(90deg);
    }
}

@include maxMedia(lg) {
    .btn {
        --btn-h: 3rem;
        font-size: 0.875rem;
        padding: 0.75rem 1em;
    }
}